CREATE SCHEMA IF NOT EXISTS users;

DROP TABLE users;
CREATE TABLE IF NOT EXISTS users
(
    user_id    SERIAL           NOT NULL,
    name       text             NOT NULL,
    password   text             NOT NULL,
    email      text             NOT NULL,
    birth_date date             NOT NULL,
    balance    double precision NOT NULL,
    PRIMARY KEY (user_id)
);
ALTER TABLE users
    OWNER TO postgres;

INSERT INTO users (name, password, email, birth_date, balance)
values ('Wade', 'Williams', 'test@mail.com', '01-01-1990', 0.5),
       ('Dave', 'Harris', 'test@mail.com', '01-01-1990', 0.5),
       ('Seth', 'Thomas', 'test@mail.com', '01-01-1990', 0.5),
       ('Seth', 'Thomas', 'test@mail.com', '01-01-1990', 0.5),
       ('Ivan', 'Robinson', 'test@mail.com', '01-01-1990', 0.5),
       ('Riley', 'Walker', 'test@mail.com', '01-01-1990', 0.5),
       ('Daisy', 'Scott', 'test@mail.com', '01-01-1990', 0.5),
       ('Deborah', 'Nelson', 'test@mail.com', '01-01-1990', 0.5),
       ('Stella', 'Morgan', 'test@mail.com', '01-01-1990', 0.5),
       ('Debra', 'Cooper', 'test@mail.com', '01-01-1990', 0.5);

SELECT *
FROM users;

SELECT *
FROM users
WHERE user_id = 1;

DROP TABLE categories;
CREATE SCHEMA IF NOT EXISTS categories;

CREATE TABLE IF NOT EXISTS categories
(
    category_id SERIAL NOT NULL,
    name        text   NOT NULL,
    rating      int4 DEFAULT 1,
    PRIMARY KEY (category_id)
);

INSERT INTO categories (name)
values ('category1'),
       ('category2'),
       ('category3');

SELECT *
FROM categories;

-- DROP TABLE products;
CREATE SCHEMA IF NOT EXISTS products;
CREATE TABLE IF NOT EXISTS products
(
    product_id  SERIAL NOT NULL,
    name        text   NOT NULL,
    description TEXT,
    price       double precision,
    category_id INTEGER,
    PRIMARY KEY (product_id),
    CONSTRAINT fk_category_id FOREIGN KEY (category_id) REFERENCES categories (category_id)
);
ALTER TABLE products
    OWNER TO postgres;

INSERT INTO products (name, description, price, category_id)
VALUES ('product name1',
        'Our product is a versatile and high-quality backpack designed for the modern adventurer. With multiple pockets and compartments, it provides ample space for all your gear, whether you''re hitting the trails or a bustling city. Made from durable materials, it''s built to withstand the elements and last for years to come.',
        19.99, 1),
       ('product name2',
        'Our product is a versatile and high-quality backpack designed for the modern adventurer. With multiple pockets and compartments, it provides ample space for all your gear, whether you''re hitting the trails or a bustling city. Made from durable materials, it''s built to withstand the elements and last for years to come.',
        24.95, 2),
       ('product name3',
        'Our product is a versatile and high-quality backpack designed for the modern adventurer. With multiple pockets and compartments, it provides ample space for all your gear, whether you''re hitting the trails or a bustling city. Made from durable materials, it''s built to withstand the elements and last for years to come.',
        10.99, 2),
       ('product name4',
        'Our product is a versatile and high-quality backpack designed for the modern adventurer. With multiple pockets and compartments, it provides ample space for all your gear, whether you''re hitting the trails or a bustling city. Made from durable materials, it''s built to withstand the elements and last for years to come.',
        16.50, 3);

SELECT *
FROM products;

DELETE
FROM products
WHERE name = 'product name test';

SELECT *
FROM products
WHERE category_id = 3;

-- DROP TABLE orders;
CREATE SCHEMA IF NOT EXISTS orders;
CREATE TABLE IF NOT EXISTS orders
(
    order_id SERIAL NOT NULL,
    price    double precision,
    date     date   NOT NULL DEFAULT CURRENT_DATE,
    user_id  INTEGER,
    PRIMARY KEY (order_id),
    CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users (user_id)
);
ALTER TABLE orders
    OWNER TO postgres;

INSERT INTO orders (price, user_id)
VALUES (0.10, 1),
       (0.20, 2),
       (0.30, 3);

SELECT *
FROM orders;


-- DROP TABLE carts;
CREATE SCHEMA IF NOT EXISTS carts;
CREATE TABLE IF NOT EXISTS carts
(
    cart_id SERIAL NOT NULL,
    price   double precision,
    date    date   NOT NULL DEFAULT CURRENT_DATE,
    user_id INTEGER,
    PRIMARY KEY (cart_id),
    CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users (user_id)
);
ALTER TABLE carts
    OWNER TO postgres;

INSERT INTO carts (price, user_id)
VALUES (0.10, 1),
       (0.20, 2),
       (0.30, 3);

SELECT *
FROM carts;